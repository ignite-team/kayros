logging:
  level:
    es:
      ozona: debug
    root: warn
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([trace=%X{X-Trace-Id:-},span=%X{X-Span-Id:-}]){yellow} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%replace(%xException){'\n','\u2028'}%nopex%n"    

spring:
  profiles:
    active: @spring.profiles.active@
  h2:
    console:
      enabled: true
      path: /h2-console

server:
  port: 8083

feign:
  hystrix:
    enabled: true
  
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false

management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream
        
kairos-calendar-service:
  ribbon:
    ReadTimeout: 10000
    ConnectTimeout: 10000   
    MaxAutoRetriesNextServer: 4
    MaxAutoRetries: 2

--- # Profile dev

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: http://localhost:4001/eureka

spring:
  profiles: dev
  application:
    name: kairos-employee-service
  cloud:
    stream:
      bindings:
        employeeManagementOutChannel:
          destination: employeeManagement
          binder: rabbit
        timesheetManagementInputChannel:
          destination: timesheetManagement
          binder: rabbit
          group: employeeService
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
  datasource:
    url: jdbc:h2:file:C:/proyectos/employeedb;DB_CLOSE_DELAY=2;AUTO_SERVER=TRUE #DB_CLOSE_ON_EXIT=false
    username: sa
    password:
    driverClassName: org.h2.Driver
  jpa:
    generate-ddl: true
    show-sql: true
    open-in-view: true
    database-platform: es.ozona.kairos.employee.MyH2Dialect
    hibernate:
      ddl-auto: create-drop

--- # Profile test

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: http://eureka-one:4001/eureka

spring:
  profiles: test
  application:
    name: kairos-employee-service
  cloud:
    stream:
      bindings:
        employeeManagementOutChannel:
          destination: employeeManagement
          binder: rabbit
        timesheetManagementInputChannel:
          destination: timesheetManagement
          binder: rabbit
          group: employeeService
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: rabbitmq
                port: 5672
                username: guest
                password: guest
  datasource:
    url: jdbc:postgresql://postgres:5432/kayros
    username: kayros_employee_app
    password: kayros_employee_app
    initialization-mode: always
    platform: postgres
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop

--- # Profile prod

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: http://eureka-one:4001/eureka

spring:
  profiles: prod
  application:
    name: kairos-employee-service
  cloud:
    stream:
      bindings:
        employeeManagementOutChannel:
          destination: employeeManagement
          binder: rabbit
        timesheetManagementInputChannel:
          destination: timesheetManagement
          binder: rabbit
          group: employeeService
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: rabbitmq
                port: 5672
                username: guest
                password: guest
  datasource:
    url: jdbc:postgresql://192.168.85.191:5432/kayros
    username: kayros-user
    password: abc123.
    initialization-mode: always
    platform: postgres
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
